schema
  @link(url: "https://specs.apollo.dev/link/v1.0")
  @link(url: "https://specs.apollo.dev/join/v0.3", for: EXECUTION)
  @link(url: "https://specs.apollo.dev/tag/v0.3")
{
  query: Query
}

directive @join__enumValue(graph: join__Graph!) repeatable on ENUM_VALUE

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean, override: String, usedOverridden: Boolean) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false, resolvable: Boolean! = true, isInterfaceObject: Boolean! = false) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @join__unionMember(graph: join__Graph!, member: String!) repeatable on UNION

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

directive @tag(name: String!) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION | SCHEMA

type DeliveryEstimates
  @join__type(graph: INVENTORY_API)
{
  estimatedDelivery: String
  fastestDelivery: String
}

scalar join__FieldSet

enum join__Graph {
  INVENTORY_API @join__graph(name: "inventory-api", url: "https://localhost:8001/inventory-api/graphql")
  ORDERS_API @join__graph(name: "orders-api", url: "https://localhost:8001/products-api/graphql")
  USERS_API @join__graph(name: "users-api", url: "https://localhost:8001/users-api/graphql")
}

scalar link__Import

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY

  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

type Product
  @join__type(graph: INVENTORY_API, key: "id")
  @join__type(graph: ORDERS_API, key: "id")
  @join__type(graph: ORDERS_API, key: "sku package")
  @join__type(graph: ORDERS_API, key: "sku variation { id }")
{
  id: ID! @tag(name: "hi-from-inventory") @tag(name: "hi-from-products")
  dimensions: ProductDimension @join__field(graph: INVENTORY_API, external: true) @join__field(graph: ORDERS_API)
  delivery(zip: String): DeliveryEstimates @join__field(graph: INVENTORY_API, requires: "dimensions { size weight }")
  sku: String @join__field(graph: ORDERS_API) @tag(name: "hi-from-products")
  package: String @join__field(graph: ORDERS_API)
  variation: ProductVariation @join__field(graph: ORDERS_API)
  createdBy: User @join__field(graph: ORDERS_API, provides: "totalProductsCreated")
}

type ProductDimension
  @join__type(graph: INVENTORY_API)
  @join__type(graph: ORDERS_API)
{
  size: String
  weight: Float @tag(name: "hi-from-inventory-value-type-field")
}

type ProductVariation
  @join__type(graph: ORDERS_API)
{
  id: ID!
}

type Query
  @join__type(graph: INVENTORY_API)
  @join__type(graph: ORDERS_API)
  @join__type(graph: USERS_API)
{
  allProducts: [Product] @join__field(graph: ORDERS_API)
  product(id: ID!): Product @join__field(graph: ORDERS_API)
}

type User
  @join__type(graph: ORDERS_API, key: "email")
  @join__type(graph: USERS_API, key: "email")
{
  email: ID!
  totalProductsCreated: Int @join__field(graph: ORDERS_API, external: true) @join__field(graph: USERS_API)
  name: String @join__field(graph: USERS_API)
}
